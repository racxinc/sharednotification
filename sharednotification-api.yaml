openapi: 3.0.0
info:
  version: 1.0.0
  title: Shared Nofifcation API
  description: RESTful API use to shared alerts among members within the same group/community/network/neighbourhood

servers:
  - url: https://sharednotification.com/api/v1




#  ----- Added lines  ----------------------------------------
paths:
  /users/login:
    get:
      tags:
        - users
      summary: Log-in to a specific user resource.
      description: log user into the system 
      #  ----- Added lines  ----------------------------------------
      parameters:
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string

      #  ---- /Added lines  ---------------------------------------- 
      responses:
        '200':
          description: Successfully returned a list of artists
          content:
            application/json:
              schema:
                type: array
                items:
                  #  ----- Added line  --------------------------------
                  $ref: '#/components/schemas/UsersProfile'
                  #  ---- /Added line  --------------------------------

        '400':
            #  ----- Added line  ----------------------------------------
            $ref: '#/components/responses/400Error'
            #  ---- /Added line  ----------------------------------------

      security:
        - sharednotification_auth:
            - write:devices
            - read:devices 


  /users/{username}:
    get:
      tags:
        - users
      summary: GET specific user resource.
      description: Obtain information about user from his or her unique username
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string          
      responses:
        '200':
          description: Successfully returned specific user
          content:
            application/json:
              schema:
                
                #  ----- Added line  --------------------------------
                $ref: '#/components/schemas/UsersProfile'
                #  ---- /Added line  --------------------------------
                
                
        '400':
          #  ----- Added line  ----------------------------------------
          $ref: '#/components/responses/400Error'
          #  ---- /Added line  ----------------------------------------
    put:
      tags:
        - users
      summary: UPDATE a specific user resource.
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string 
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
          application/xml:
            schema:
              $ref: '#/components/schemas/Users'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Users'
      responses:
        '200':
          description: successful operation
        '400':
          description: bad request
        '404':
          description: user not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - users
      summary: Delete user resource.
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - sharednotification_auth:
            - write:devices
            - read:devices 

  /users/{username}/devices:
    get:
      tags:
        - devices
      summary: GET devices for a given user resource.
      description: Obtain list of device name for this unique username
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string          
      responses:
        '200':
          description: Successfully returned specific device detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  hid:
                    type: string
                  nid:
                    type: string
                  radius:
                    type: integer
                  typeOfGroup:
                    type: string
 
        '400':
          #  ----- Added line  ----------------------------------------
          $ref: '#/components/responses/400Error'
          #  ---- /Added line  ----------------------------------------
    post:
      tags:
        - devices
      summary: ADD a device user.
      description: This can only be done by the logged in user.
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string
      operationId: createDevice
      requestBody:
        description: Created device object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Devices'
          application/xml:
            schema:
              $ref: '#/components/schemas/Devices'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Devices'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicesProfile'
            application/xml:
              schema:
                $ref: '#/components/schemas/DevicesProfile'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
      security:
        - sharednotification_auth:
            - write:devices
            - read:devices 

  /users:
    post:
      tags:
        - users
      summary: CREATE a user resource.
      description: Create a user
      responses:
        '200':
          description: Successfully returned an artist
          content:
            application/json:
              schema:
                #  ----- Added line  ------------------------------------
                $ref: '#/components/schemas/UsersProfile'
                #$ref: '#/components/schemas/NetworkProfile'
                #  ---- /Added line  ------------------------------------
                
        '400':
          #  ----- Added line  ----------------------------------------
          $ref: '#/components/responses/400Error'
          #  ---- /Added line  ----------------------------------------

    get:
      tags:
        - users
      summary: GET x number of USERS for user resource.
      description: log user into the system 
      #  ----- Added lines  ----------------------------------------
      parameters:
        #  ----- Added line  ------------------------------------------
        - $ref: '#/components/parameters/StartLimit'
        - $ref: '#/components/parameters/EndLimit'
        #  ---- /Added line  ------------------------------------------
        
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string

      #  ---- /Added lines  ---------------------------------------- 
      responses:
        '200':
          description: Successfully returned a list of artists
          content:
            application/json:
              schema:
                type: array
                items:
                  #  ----- Added line  --------------------------------
                  $ref: '#/components/schemas/UsersProfile'
                  #  ---- /Added line  --------------------------------

        '400':
            #  ----- Added line  ----------------------------------------
            $ref: '#/components/responses/400Error'
            #  ---- /Added line  ----------------------------------------
      security:
        - sharednotification_auth:
            - write:devices
            - read:devices 

  /users/{username}/devices/{deviceId}:
    get:
      tags:
        - devices
      summary: GET devices for a given user resource.
      description: Obtain list of device name for this unique username
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string          
      responses:
        '200':
          description: Successfully returned specific device detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  hid:
                    type: string
                  nid:
                    type: string
                  radius:
                    type: integer
                  typeOfGroup:
                    type: string
                  api_key:
                    type: string
 
        '400':
          #  ----- Added line  ----------------------------------------
          $ref: '#/components/responses/400Error'
          #  ---- /Added line  ----------------------------------------
  
    put:
      tags:
        - devices
      summary: Update device for 'Private' network for a specific user resource.
      description: This can only be done by the logged in user.
      operationId: UpdateDevice
      parameters:
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  
  
    delete:
      tags:
        - devices
      summary: Delete device for 'Private' network for a specific user resource.
      description: This can only be done by the logged in user.
      operationId: deleteDevice
      parameters:
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  
  /devices/{deviceId}/setting:
    get:
      tags:
        - devices
      summary: GET devices SETTINGS for a given device resource.
      description: Obtain device settings such NS-ALERT for a specific device
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string          
      responses:
        '200':
          description: Successfully returned specific device detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  fr_ns_address:
                    type: string
                  to_ns_address:
                    type: string
                  unknown_address:
                    type: string
                  webhook:
                    type: string
                  alert_check_frequency:
                    type: integer
                    format: int32
                    example: '120'

        '400':
          #  ----- Added line  ----------------------------------------
          $ref: '#/components/responses/400Error'
          #  ---- /Added line  ----------------------------------------
          
    put:
      tags:
        - devices
      summary: UPDATE device's settings for a specific device resource.
      description: Update a device's setting
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string  
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceSettings'
          application/xml:
            schema:
              $ref: '#/components/schemas/DeviceSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceSettings'
      responses:
        '200':
          description: successful operation
        '400':
          description: bad request
        '404':
          description: user not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error" 


  /alerts/devices/{deviceId}:
    get:
      tags:
        - alerts
      summary: GET alerts in chunks for given device resource.
      description: Fetch alerts in block size
      parameters:
        #  ----- Added line  ------------------------------------------
        - $ref: '#/components/parameters/StartLimit'
        - $ref: '#/components/parameters/EndLimit'
        #  ---- /Added line  ------------------------------------------
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string          
      responses:
        '200':
          description: Successfully returned specific device detail
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alerts'

        '400':
          #  ----- Added line  ----------------------------------------
          $ref: '#/components/responses/400Error'
          #  ---- /Added line  ----------------------------------------

    post:
      tags:
        - alerts
      summary: CREATE/Store an alert.
      description: Store received alerts
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string
      operationId: createAlert
      requestBody:
        description: Created an alert object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alerts'
          application/xml:
            schema:
              $ref: '#/components/schemas/Alerts'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Alerts'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerts'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alerts'
        
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    
  /alerts/devices/{deviceId}/{Id}:
    get:
      tags:
        - alerts
      summary: GET devices for a given user resource.
      description: Obtain list of device name for this unique username
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string          
      responses:
        '200':
          description: Successfully returned specific device detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  hid:
                    type: string
                  nid:
                    type: string
                  radius:
                    type: integer
                  typeOfGroup:
                    type: string
                  api_key:
                    type: string
        '400':
          #  ----- Added line  ----------------------------------------
          $ref: '#/components/responses/400Error'
          #  ---- /Added line  ----------------------------------------
          
    delete:
      tags:
        - alerts
      summary: Delete a specific alert by identifier.
      description: For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors.
      operationId: deleteAlert
      parameters:
        - name: Id
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
        - name: api_key
          in: query
          description: Every request must have a api-key query
          schema:
            type: string 
      responses:
        '200':
          description: order deleted
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"      
          
      security:
        - sharednotification_auth:
            - write:devices
            - read:devices          


components:

  securitySchemes:
    sharednotification_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            "write:devices": modify pets in your account
            "read:devices": read your pets

  #  ----- Added lines  ----------------------------------------                
  schemas:
    
    
    # ---------------------start-----------------------------------
    Alerts:
      type: object
      properties:
        id:
          type: integer
          example: 24
        hid:
          type: string
          example: 'ABCDEFG-000000002'
        bcname:
          type: string
          example: 'COUSINS'
        _type:
          type: string
          example: 'SERVICE-CHILDCARE'
        to:
          type: string
          example: 'YOUNG'
        co:
          type: string
          example: 'Chornell'
        tt:
          type: integer
          example: 1754586175.054292
        tt_string:
          type: string
          example: '12:18AM Sep 2, 2025'
        msg:
          type: object
          properties:
            ad:
              type: string
              example: 'Available Monday to Friday from 4pm to 11pm for babysitting services'
            subject:
              type: string
              example: 'Responsible babysitter available'
            email:
              type: string
              example: 'chornell.young@sharednotification.com'
            tele:
              type: string
              example: '416-875-8942'
            website:
              type: string
              example: 'www.sharednotification.com'
    # ---------------------end-------------------------------------
    #  --------------------start-----------------------------------
    DeviceSettings:
      type: object
      properties:
        fr_ns_address:
          type: string
          example: '1 Oklahoma Drive'
        to_ns_address:
          type: string
          example: '60 Oklahoma Drive'
        unknown_address:
          type: string
          example: '1-60 Oklahoma Drive'
        webhook:
          type: string
          example: 'alert/openui-12A'
        alert_check_frequency:
          type: integer
          example: 120
    # ---------------------start----------------------------------
    Devices:
      type: object
      properties:
        fname:
          type: string
          example: John
        lname:
          type: string
          example: Doe
        email:
          type: string
          example: john@sharednotification.com
        tele:
          type: string
          example: '(647)873-8195'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
        snumber:
          type: string
          description: User street number
          example: 44
        sname:
          type: string
          description: User's street name
          example: 'Oklahoma Drive'
        city:
          type: string
          description: User's city
          example: 'Brampton'
        city_code:
          type: string
          description: User's Postal Code
          example: 'L6P 3J7'
        country:
          type: string
          description: User's country
          example: 'Canada'  
    # ---------------------End------------------------------------
    # ---------------------start----------------------------------
    DevicesProfile:
      type: object
      properties:
        hid:
          type: string
          example: 'ABCDEFG9876-0000001'
        fname:
          type: string
          example: John
        lname:
          type: string
          example: Doe
        email:
          type: string
          example: john@sharednotification.com
        tele:
          type: string
          example: '(647)873-8195'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
        snumber:
          type: string
          description: User street number
          example: 44
        sname:
          type: string
          description: User's street name
          example: 'Oklahoma Drive'
        city:
          type: string
          description: User's city
          example: 'Brampton'
        city_code:
          type: string
          description: User's Postal Code
          example: 'L6P 3J7'
        country:
          type: string
          description: User's country
          example: 'Canada'  
    # ---------------------End------------------------------------
    #  --------------------start-----------------------------------
    Users:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        fname:
          type: string
          example: John
        lname:
          type: string
          example: Doe
        email:
          type: string
          example: john@sharednotification.com
        password:
          type: string
          example: '12345'
        tele:
          type: string
          example: '(647)873-8195'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
        snumber:
          type: string
          description: User street number
          example: 44
        sname:
          type: string
          description: User's street name
          example: 'Oklahoma Drive'
        city:
          type: string
          description: User's city
          example: 'Brampton'
        city_code:
          type: string
          description: User's Postal Code
          example: 'L6P 3J7'
        country:
          type: string
          description: User's country
          example: 'Canada'
      xml:
        name: user
    #  --------------------End-----------------------------------
    #  --------------------Start---------------------------------
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    # ----------------------End------------------------------------
    
    UsersProfile:
      type: object
      required:
        - username
      properties:
        fname:
          type: string
        lname:
          type: string
        snumber:
          type: string
        sname:
          type: string
        city:
          type: string
        parish:
          type: string
        city_code:
          type: string
      #additionalProperties: true # Allows any other properties


    # -----------------------end------------------------------------
  parameters:
    StartLimit:
      name: startIndex
      in: query
      description: Limits the number of items
      schema:
        type: integer
      
    EndLimit:
      name: size
      in: query
      description: Specifies the number of items to be displayed
      schema:
        type: integer

  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object 
            properties:
              message:
                type: string
  #  ---- /Added lines  ---------------------------------------- 